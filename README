This is a collection of processes that communicate by pipe.
They read double dash files to specify polytopes, sounds, and manipulation modes.
Mouse motion can transform view, polytope, or plane.
Mouse clicks can add plane, add region, or remove region.
Writes to a double dash file through a file process writes the change to
other process depending on the double dash file.

The Theory file proves that naive.hs is algorithmic.

The make include file depend.mk is auto-generated by depend.lua that
executes make in a clean directory, examines error messages,
copies files, examines files, and records dependencies.

face.c face.cpp face.h face.hs facer.c facer.hs facer.lua test fork exec read write pipes.
This has fork/exec read*/write* *Int/*Num/*Str/*New/*Old
for int/double/char*/longlong/float to/from pipes in each language.

type.gen share.lua typer.gen typra.lua test generation of type.h and *.type.c/hs/lua.
Structs and enums are specified by lua data in type.gen.

file.c filer.lua test open write monitor files.
Main pselects on interface pipe, waiting for commands.
Open file command opens the helper named pipe for writing,
creates a pthread with unnamed pipe, and opens given file.
Write command forwards to indicated named pipe.
Main pselects unnamed pipes and interface pipe.
The created pthread lock reads from given file til eof,
and tries for writelock on eof of helper file,
or waits for readlock on tail of circular buffer helper file.
The writelocker waits for commands in the named pipe,
lock changes the given file, writes to unnamed pipe,
and writes location and size to tail,
writes to the unnamed pipe, and loops back.
The readlocker reads the location and size from tail,
lock reads given file, writes to unnamed, and loops back.

hole.c holer.lua test read write to files on other servers.
local commands are mapped to local file of file on other server.
remote commands are mapped to local file.
responses are mapped to local or remote processes.

line.c liner.lua linra.c test stock flow sound system.
This allows simple sums of terms of coefficient
with one or two variable factors or three variable conditional
to schedule evaluations, variable changes, and interface writes on a timewheel.
Interface reads can change the set variables, their simple sums,
their values, or which is used for sound.

vulkan.cpp planraCpp.mk planra.c test display mouse keyboard.
plane.c, plane.h maintain matrices according to mode.
This has four shaders, one to find pierce points,
one to display facets, one to stream framebuffers,
and one to detect focal point proximity to planes.
This maintains a global transformation matrix,
a matrix per polytope, and a matrix per plane.
Each maintained matrix has
pierce mode, pierce states, pierce deltas,
portion to send matrix, portion sent matrix.
Matrix sent to gpu is maintained composed with
portion sent, portion to send, and pierce delta.
All but pierce delta is cached to optimize composition.
Before changing any but pierce delta, invalidate composition cache.
Before changing pierce mode, apply pierce delta to portion to send.
After applying pierce delta, change pierce state for continuity.
Before changing maintained to matrix read from processes,
remove if is loopback from portion sent.
After writing portion to send, apply to portion sent,
and clear to identity portion to send. 
At will, read matrices, write matrices, and change pierce mode.
Each plane process monitors any number of plane files containing,
data streams for points facets arrays and matrices.

space.hs Naive.hs spacer.lua spacra.hs test specify examine sample classify.
This keeps track of which side of boundaries regions are on,
classifies planes as boundaries, samples boundaries as planes,
classifies sets of regions as polytopes, samples polytopes as region sets,
finds super- sub- co- space section,
produces points and element arrays for opengl.

planer.lua uses displayable free running transformations to find improve display tetrahedron overlaps.

plane.lua allows user to manipulate polytopes.

space.lua finds and/or prettifies complete sets of spaces and tetrahedron overlaps.

line.lua plays sounds that interact with polytopes.

point.lua opens tcl/tk guiâ€™s for pipes between processes, configuration file changing, audio visual formats.
